\contentsline {chapter}{\numberline {1}Review: Bit Manipulation}{4}{chapter.1}% 
\contentsline {section}{\numberline {1.1}Converting to and from Different Bases}{4}{section.1.1}% 
\contentsline {subsection}{\numberline {1.1.1}Converting from base 10 $\to $ base 2}{4}{subsection.1.1.1}% 
\contentsline {subsection}{\numberline {1.1.2}Converting from base 2 $\to $ base 16}{4}{subsection.1.1.2}% 
\contentsline {subsection}{\numberline {1.1.3}Converting from base 10 $\to $ base 16 (and vice versa)}{5}{subsection.1.1.3}% 
\contentsline {chapter}{\numberline {2}Logic Functions and Logic Gates}{6}{chapter.2}% 
\contentsline {section}{\numberline {2.1}Or Gate}{6}{section.2.1}% 
\contentsline {section}{\numberline {2.2}And Gate}{6}{section.2.2}% 
\contentsline {section}{\numberline {2.3}Inverter}{6}{section.2.3}% 
\contentsline {section}{\numberline {2.4}XOR}{6}{section.2.4}% 
\contentsline {chapter}{\numberline {3}Boolean Algebra}{7}{chapter.3}% 
\contentsline {paragraph}{Dual Form}{7}{section*.2}% 
\contentsline {paragraph}{Duality: }{7}{section*.3}% 
\contentsline {section}{\numberline {3.1}Useful Boolean Expression Rules}{7}{section.3.1}% 
\contentsline {paragraph}{Distributive Properties: }{8}{section*.4}% 
\contentsline {section}{\numberline {3.2}Sum-of-Products (SOP)}{8}{section.3.2}% 
\contentsline {paragraph}{Min term: }{8}{section*.5}% 
\contentsline {section}{\numberline {3.3}Product of Sums (POS)}{8}{section.3.3}% 
\contentsline {paragraph}{Max term: }{8}{section*.6}% 
\contentsline {section}{\numberline {3.4}NAND and NOR Logic Networks (TB 2.7)}{9}{section.3.4}% 
\contentsline {section}{\numberline {3.5}Three-Way Light Control (TB 2.8.1)}{9}{section.3.5}% 
\contentsline {chapter}{\numberline {4}How 2 Verilog}{10}{chapter.4}% 
\contentsline {paragraph}{Notes on Implementation}{10}{section*.7}% 
\contentsline {subsection}{\numberline {4.0.1}Code: 3-Way Multiplexer}{10}{subsection.4.0.1}% 
\contentsline {paragraph}{Can you make the assignment more efficient?}{11}{section*.8}% 
\contentsline {paragraph}{Because $s$ is only 1-bit and $a, b$ are two bits, $s$ is extended with a \textbf {0}, which makes the logic incorrect!}{11}{section*.9}% 
\contentsline {paragraph}{General Notes on how Syntax Works:}{11}{section*.10}% 
\contentsline {section}{\numberline {4.1}Full Adder}{11}{section.4.1}% 
\contentsline {paragraph}{Description: }{11}{section*.11}% 
\contentsline {paragraph}{Ripple Carry Adder: }{12}{section*.12}% 
\contentsline {paragraph}{Specifics for Ripple Carry Adder: }{12}{section*.13}% 
\contentsline {paragraph}{Review of Outcomes}{12}{section*.14}% 
\contentsline {paragraph}{Now let's make it in verilog!}{13}{section*.15}% 
\contentsline {paragraph}{Now we make a 3-bit adder out of full adders in Verilog!}{13}{section*.16}% 
\contentsline {paragraph}{Weird constant syntax: }{13}{section*.17}% 
\contentsline {section}{\numberline {4.2}7-Segment Display}{14}{section.4.2}% 
\contentsline {paragraph}{Prompt: }{14}{section*.18}% 
\contentsline {paragraph}{Numbering: }{14}{section*.19}% 
\contentsline {paragraph}{Note on D1-SoC Board: }{14}{section*.20}% 
\contentsline {subsection}{\numberline {4.2.1}Displaying Numbers}{14}{subsection.4.2.1}% 
\contentsline {paragraph}{With active low: }{14}{section*.21}% 
\contentsline {paragraph}{Truth Table: }{14}{section*.22}% 
\contentsline {paragraph}{Consolidating the Logic Functions: }{14}{section*.23}% 
\contentsline {paragraph}{Verilog Code: }{15}{section*.24}% 
\contentsline {paragraph}{Implementation Example: }{15}{section*.25}% 
\contentsline {paragraph}{Cool XOR Fact: }{15}{section*.26}% 
\contentsline {section}{\numberline {4.3}FPGA's}{15}{section.4.3}% 
\contentsline {paragraph}{How to encode any two-input thing}{16}{section*.27}% 
\contentsline {chapter}{\numberline {5}Karnaugh Maps}{17}{chapter.5}% 
\contentsline {section}{\numberline {5.1}Motivation}{17}{section.5.1}% 
\contentsline {paragraph}{Example 2x2 Karnaugh Map}{17}{section*.28}% 
\contentsline {section}{\numberline {5.2}Review of Terminology}{17}{section.5.2}% 
\contentsline {paragraph}{Example: }{18}{section*.29}% 
\contentsline {paragraph}{Cost Defininition: }{18}{section*.30}% 
\contentsline {section}{\numberline {5.3}Procedure for Minimum Cost Cover}{18}{section.5.3}% 
\contentsline {section}{\numberline {5.4}5 Variable Karnaugh Map}{18}{section.5.4}% 
\contentsline {chapter}{\numberline {6}Storage Elements}{19}{chapter.6}% 
\contentsline {section}{\numberline {6.1}Introduction}{19}{section.6.1}% 
\contentsline {paragraph}{Storage elements }{19}{section*.31}% 
\contentsline {section}{\numberline {6.2}RS Latches}{19}{section.6.2}% 
\contentsline {subsection}{\numberline {6.2.1}Behavior}{19}{subsection.6.2.1}% 
\contentsline {section}{\numberline {6.3}Gated RS Latch}{20}{section.6.3}% 
\contentsline {subsection}{\numberline {6.3.1}Synchronous Reset}{20}{subsection.6.3.1}% 
\contentsline {subsection}{\numberline {6.3.2}Behavior}{20}{subsection.6.3.2}% 
\contentsline {section}{\numberline {6.4}Gated D Latch}{20}{section.6.4}% 
\contentsline {subsection}{\numberline {6.4.1}Behavior: }{20}{subsection.6.4.1}% 
\contentsline {section}{\numberline {6.5}D Flip-Flops}{20}{section.6.5}% 
\contentsline {paragraph}{Symbol: }{20}{section*.32}% 
\contentsline {paragraph}{Edge-Triggered Flip Flop: }{21}{section*.33}% 
\contentsline {subsection}{\numberline {6.5.1}Master-Slave Flip Flop}{21}{subsection.6.5.1}% 
\contentsline {subsection}{\numberline {6.5.2}Behavior}{21}{subsection.6.5.2}% 
\contentsline {paragraph}{Work-Through demonstration: }{21}{section*.34}% 
\contentsline {subsection}{\numberline {6.5.3}Why it's Useful}{21}{subsection.6.5.3}% 
\contentsline {section}{\numberline {6.6}T Flip-Flop}{21}{section.6.6}% 
\contentsline {section}{\numberline {6.7}Flip-Flop Reset/Preset}{22}{section.6.7}% 
\contentsline {section}{\numberline {6.8}Summary of Objects}{22}{section.6.8}% 
\contentsline {section}{\numberline {6.9}Verilog Implementations}{22}{section.6.9}% 
\contentsline {subsection}{\numberline {6.9.1}Gated D-Latch}{22}{subsection.6.9.1}% 
\contentsline {subsection}{\numberline {6.9.2}Edge-Triggered Flip Flop}{22}{subsection.6.9.2}% 
\contentsline {subsection}{\numberline {6.9.3}Synchronous Reset (Active Low)}{23}{subsection.6.9.3}% 
\contentsline {chapter}{\numberline {7}Finite State Machine}{24}{chapter.7}% 
\contentsline {section}{\numberline {7.1}Review}{24}{section.7.1}% 
\contentsline {subsection}{\numberline {7.1.1}State Diagrams}{24}{subsection.7.1.1}% 
\contentsline {paragraph}{Example: }{24}{section*.35}% 
\contentsline {paragraph}{Solution: }{24}{section*.36}% 
\contentsline {paragraph}{One-Hot Encoding: }{24}{section*.37}% 
\contentsline {subsection}{\numberline {7.1.2}Lmao what is an always block actually}{24}{subsection.7.1.2}% 
\contentsline {subsection}{\numberline {7.1.3}Case Statements}{25}{subsection.7.1.3}% 
\contentsline {subsection}{\numberline {7.1.4}State Machine Diagrams and Sequantial Diagrams}{25}{subsection.7.1.4}% 
\contentsline {subsection}{\numberline {7.1.5}Case Statements for State Machines}{25}{subsection.7.1.5}% 
\contentsline {chapter}{\numberline {8}Introduction to Microprocessors}{27}{chapter.8}% 
\contentsline {section}{\numberline {8.1}Computer Organization}{27}{section.8.1}% 
\contentsline {paragraph}{A computer }{27}{section*.38}% 
\contentsline {subsection}{\numberline {8.1.1}Memory Unit}{27}{subsection.8.1.1}% 
\contentsline {subsubsection}{Primary Memory}{27}{section*.39}% 
\contentsline {subsubsection}{Cache}{28}{section*.40}% 
\contentsline {subsubsection}{Secondary Storage}{28}{section*.41}% 
\contentsline {subsection}{\numberline {8.1.2}Arithmetic Logic Unit (ALU)}{28}{subsection.8.1.2}% 
\contentsline {subsection}{\numberline {8.1.3}Control Unit}{28}{subsection.8.1.3}% 
\contentsline {chapter}{\numberline {9}Basic Concepts in Microprocessors}{29}{chapter.9}% 
\contentsline {section}{\numberline {9.1}Basic Concepts}{29}{section.9.1}% 
\contentsline {section}{\numberline {9.2}Memory Locations and Addresses}{29}{section.9.2}% 
\contentsline {paragraph}{Address spaces: }{30}{section*.42}% 
\contentsline {paragraph}{Byte-addressable memory }{30}{section*.43}% 
\contentsline {subsection}{\numberline {9.2.1}Memory Operations}{30}{subsection.9.2.1}% 
\contentsline {section}{\numberline {9.3}Instruction Sequencing}{30}{section.9.3}% 
\contentsline {subsection}{\numberline {9.3.1}RISC and CISC Instructions}{30}{subsection.9.3.1}% 
\contentsline {paragraph}{RISC: }{30}{section*.44}% 
\contentsline {paragraph}{CISC: }{30}{section*.45}% 
\contentsline {section}{\numberline {9.4}Branching}{31}{section.9.4}% 
\contentsline {section}{\numberline {9.5}Addressing Modes}{31}{section.9.5}% 
\contentsline {paragraph}{Index mode }{31}{section*.46}% 
\contentsline {section}{\numberline {9.6}More on Assembly}{32}{section.9.6}% 
\contentsline {section}{\numberline {9.7}Stacks}{32}{section.9.7}% 
\contentsline {paragraph}{The Stack Pointer (SP)}{32}{section*.47}% 
\contentsline {section}{\numberline {9.8}Subroutines}{32}{section.9.8}% 
\contentsline {subsection}{\numberline {9.8.1}Subroutine Nesting}{33}{subsection.9.8.1}% 
\contentsline {paragraph}{Process for calling a nested function: }{33}{section*.48}% 
\contentsline {subsection}{\numberline {9.8.2}Parameter Passing}{33}{subsection.9.8.2}% 
\contentsline {subsection}{\numberline {9.8.3}Stack Frame}{34}{subsection.9.8.3}% 
\contentsline {paragraph}{Definition: }{34}{section*.49}% 
\contentsline {paragraph}{FRAME POINTER FP }{34}{section*.50}% 
\contentsline {chapter}{\numberline {10}IO Devices}{35}{chapter.10}% 
\contentsline {section}{\numberline {10.1}Program Control IO}{35}{section.10.1}% 
\contentsline {section}{\numberline {10.2}Interrupts}{35}{section.10.2}% 
\contentsline {paragraph}{INTERRUPT SERVICE ROUTINE }{35}{section*.51}% 
\contentsline {subsection}{\numberline {10.2.1}Notes on SUBROUTINE INTERRUPT IMPLEMENTATION: }{36}{subsection.10.2.1}% 
\contentsline {paragraph}{REGISTERS MUST BE RESTORED }{36}{section*.52}% 
\contentsline {subsection}{\numberline {10.2.2}Enable and Disabling Interrupts}{36}{subsection.10.2.2}% 
\contentsline {paragraph}{IO MODE }{36}{section*.53}% 
\contentsline {subsection}{\numberline {10.2.3}Process for a Single Device Interrupt Call}{36}{subsection.10.2.3}% 
\contentsline {section}{\numberline {10.3}Multiple Device Interrupts}{37}{section.10.3}% 
\contentsline {subsection}{\numberline {10.3.1}Approach One: Na\IeC {\"\i }ve Polling}{37}{subsection.10.3.1}% 
\contentsline {subsection}{\numberline {10.3.2}Vectored Inputs}{37}{subsection.10.3.2}% 
\contentsline {paragraph}{INTERRUPT VECTOR TABLE }{37}{section*.54}% 
\contentsline {subsection}{\numberline {10.3.3}Interrupt Nesting}{37}{subsection.10.3.3}% 
\contentsline {paragraph}{PROCESSOR PRIORITY }{37}{section*.55}% 
\contentsline {section}{\numberline {10.4}Processor Control Register}{37}{section.10.4}% 
