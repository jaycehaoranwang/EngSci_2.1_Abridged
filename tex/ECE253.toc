\contentsline {chapter}{\numberline {1}Review: Bit Manipulation}{4}{chapter.1}% 
\contentsline {section}{\numberline {1.1}Converting to and from Different Bases}{4}{section.1.1}% 
\contentsline {subsection}{\numberline {1.1.1}Converting from base 10 $\to $ base 2}{4}{subsection.1.1.1}% 
\contentsline {subsection}{\numberline {1.1.2}Converting from base 2 $\to $ base 16}{4}{subsection.1.1.2}% 
\contentsline {subsection}{\numberline {1.1.3}Converting from base 10 $\to $ base 16 (and vice versa)}{5}{subsection.1.1.3}% 
\contentsline {chapter}{\numberline {2}Boolean Algebra}{6}{chapter.2}% 
\contentsline {paragraph}{Dual Form}{6}{section*.2}% 
\contentsline {paragraph}{Duality: }{6}{section*.3}% 
\contentsline {section}{\numberline {2.1}Useful Boolean Expression Rules}{6}{section.2.1}% 
\contentsline {paragraph}{Distributive Properties: }{7}{section*.4}% 
\contentsline {section}{\numberline {2.2}Sum-of-Products (SOP)}{7}{section.2.2}% 
\contentsline {paragraph}{Min term: }{7}{section*.5}% 
\contentsline {section}{\numberline {2.3}Product of Sums (POS)}{7}{section.2.3}% 
\contentsline {paragraph}{Max term: }{7}{section*.6}% 
\contentsline {chapter}{\numberline {3}How 2 Verilog}{8}{chapter.3}% 
\contentsline {paragraph}{Notes on Implementation}{8}{section*.7}% 
\contentsline {subsection}{\numberline {3.0.1}Code: 3-Way Multiplexer}{8}{subsection.3.0.1}% 
\contentsline {paragraph}{Can you make the assignment more efficient?}{9}{section*.8}% 
\contentsline {paragraph}{Because $s$ is only 1-bit and $a, b$ are two bits, $s$ is extended with a \textbf {0}, which makes the logic incorrect!}{9}{section*.9}% 
\contentsline {paragraph}{General Notes on how Syntax Works:}{9}{section*.10}% 
\contentsline {section}{\numberline {3.1}Full Adder}{9}{section.3.1}% 
\contentsline {paragraph}{Description: }{9}{section*.11}% 
\contentsline {paragraph}{Ripple Carry Adder: }{10}{section*.12}% 
\contentsline {paragraph}{Specifics for Ripple Carry Adder: }{10}{section*.13}% 
\contentsline {paragraph}{Review of Outcomes}{10}{section*.14}% 
\contentsline {paragraph}{Now let's make it in verilog!}{11}{section*.15}% 
\contentsline {paragraph}{Now we make a 3-bit adder out of full adders in Verilog!}{11}{section*.16}% 
\contentsline {paragraph}{Weird constant syntax: }{11}{section*.17}% 
\contentsline {section}{\numberline {3.2}7-Segment Display}{12}{section.3.2}% 
\contentsline {paragraph}{Prompt: }{12}{section*.18}% 
\contentsline {paragraph}{Numbering: }{12}{section*.19}% 
\contentsline {paragraph}{Note on D1-SoC Board: }{12}{section*.20}% 
\contentsline {subsection}{\numberline {3.2.1}Displaying Numbers}{12}{subsection.3.2.1}% 
\contentsline {paragraph}{With active low: }{12}{section*.21}% 
\contentsline {paragraph}{Truth Table: }{12}{section*.22}% 
\contentsline {paragraph}{Consolidating the Logic Functions: }{12}{section*.23}% 
\contentsline {paragraph}{Verilog Code: }{13}{section*.24}% 
\contentsline {paragraph}{Implementation Example: }{13}{section*.25}% 
\contentsline {paragraph}{Cool XOR Fact: }{13}{section*.26}% 
\contentsline {section}{\numberline {3.3}FPGA's}{13}{section.3.3}% 
\contentsline {paragraph}{How to encode any two-input thing}{14}{section*.27}% 
\contentsline {chapter}{\numberline {4}Karnaugh Maps}{15}{chapter.4}% 
\contentsline {section}{\numberline {4.1}Motivation}{15}{section.4.1}% 
\contentsline {paragraph}{Example 2x2 Karnaugh Map}{15}{section*.28}% 
\contentsline {section}{\numberline {4.2}Review of Terminology}{15}{section.4.2}% 
\contentsline {paragraph}{Example: }{16}{section*.29}% 
\contentsline {paragraph}{Cost Defininition: }{16}{section*.30}% 
\contentsline {section}{\numberline {4.3}Procedure for Minimum Cost Cover}{16}{section.4.3}% 
\contentsline {section}{\numberline {4.4}5 Variable Karnaugh Map}{16}{section.4.4}% 
\contentsline {chapter}{\numberline {5}Storage Elements}{17}{chapter.5}% 
\contentsline {section}{\numberline {5.1}Introduction}{17}{section.5.1}% 
\contentsline {paragraph}{Storage elements }{17}{section*.31}% 
\contentsline {section}{\numberline {5.2}RS Latches}{17}{section.5.2}% 
\contentsline {subsection}{\numberline {5.2.1}Behavior}{17}{subsection.5.2.1}% 
\contentsline {section}{\numberline {5.3}Gated RS Latch}{18}{section.5.3}% 
\contentsline {subsection}{\numberline {5.3.1}Synchronous Reset}{18}{subsection.5.3.1}% 
\contentsline {subsection}{\numberline {5.3.2}Behavior}{18}{subsection.5.3.2}% 
\contentsline {section}{\numberline {5.4}Gated D Latch}{18}{section.5.4}% 
\contentsline {subsection}{\numberline {5.4.1}Behavior: }{18}{subsection.5.4.1}% 
\contentsline {section}{\numberline {5.5}D Flip-Flops}{18}{section.5.5}% 
\contentsline {paragraph}{Symbol: }{18}{section*.32}% 
\contentsline {paragraph}{Edge-Triggered Flip Flop: }{19}{section*.33}% 
\contentsline {subsection}{\numberline {5.5.1}Master-Slave Flip Flop}{19}{subsection.5.5.1}% 
\contentsline {subsection}{\numberline {5.5.2}Behavior}{19}{subsection.5.5.2}% 
\contentsline {paragraph}{Work-Through demonstration: }{19}{section*.34}% 
\contentsline {subsection}{\numberline {5.5.3}Why it's Useful}{19}{subsection.5.5.3}% 
\contentsline {section}{\numberline {5.6}T Flip-Flop}{19}{section.5.6}% 
\contentsline {section}{\numberline {5.7}Verilog Implementations}{19}{section.5.7}% 
\contentsline {subsection}{\numberline {5.7.1}Gated D-Latch}{19}{subsection.5.7.1}% 
\contentsline {subsection}{\numberline {5.7.2}Edge-Triggered Flip Flop}{20}{subsection.5.7.2}% 
\contentsline {subsection}{\numberline {5.7.3}Synchronous Reset (Active Low)}{20}{subsection.5.7.3}% 
\contentsline {chapter}{\numberline {6}Finite State Machine}{22}{chapter.6}% 
\contentsline {section}{\numberline {6.1}Review}{22}{section.6.1}% 
\contentsline {subsection}{\numberline {6.1.1}State Diagrams}{22}{subsection.6.1.1}% 
\contentsline {paragraph}{Example: }{22}{section*.35}% 
\contentsline {paragraph}{Solution: }{22}{section*.36}% 
\contentsline {paragraph}{One-Hot Encoding: }{22}{section*.37}% 
\contentsline {subsection}{\numberline {6.1.2}Lmao what is an always block actually}{22}{subsection.6.1.2}% 
\contentsline {subsection}{\numberline {6.1.3}Case Statements}{23}{subsection.6.1.3}% 
\contentsline {subsection}{\numberline {6.1.4}Case Statements for State Machines}{23}{subsection.6.1.4}% 
\contentsline {chapter}{\numberline {7}Introduction to Microprocessors}{25}{chapter.7}% 
\contentsline {section}{\numberline {7.1}Computer Organization}{25}{section.7.1}% 
\contentsline {paragraph}{A computer }{25}{section*.38}% 
\contentsline {subsection}{\numberline {7.1.1}Memory Unit}{25}{subsection.7.1.1}% 
\contentsline {subsubsection}{Primary Memory}{25}{section*.39}% 
\contentsline {subsubsection}{Cache}{26}{section*.40}% 
\contentsline {subsubsection}{Secondary Storage}{26}{section*.41}% 
\contentsline {subsection}{\numberline {7.1.2}Arithmetic Logic Unit (ALU)}{26}{subsection.7.1.2}% 
\contentsline {subsection}{\numberline {7.1.3}Control Unit}{26}{subsection.7.1.3}% 
\contentsline {chapter}{\numberline {8}Basic Concepts in Microprocessors}{27}{chapter.8}% 
\contentsline {section}{\numberline {8.1}Basic Concepts}{27}{section.8.1}% 
\contentsline {section}{\numberline {8.2}Memory Locations and Addresses}{27}{section.8.2}% 
\contentsline {paragraph}{Address spaces: }{28}{section*.42}% 
\contentsline {paragraph}{Byte-addressable memory }{28}{section*.43}% 
\contentsline {subsection}{\numberline {8.2.1}Memory Operations}{28}{subsection.8.2.1}% 
\contentsline {section}{\numberline {8.3}Instruction Sequencing}{28}{section.8.3}% 
\contentsline {subsection}{\numberline {8.3.1}RISC and CISC Instructions}{28}{subsection.8.3.1}% 
\contentsline {paragraph}{RISC: }{28}{section*.44}% 
\contentsline {paragraph}{CISC: }{28}{section*.45}% 
\contentsline {section}{\numberline {8.4}Branching}{29}{section.8.4}% 
\contentsline {section}{\numberline {8.5}Addressing Modes}{29}{section.8.5}% 
\contentsline {paragraph}{Index mode }{29}{section*.46}% 
\contentsline {section}{\numberline {8.6}More on Assembly}{30}{section.8.6}% 
\contentsline {section}{\numberline {8.7}Stacks}{30}{section.8.7}% 
\contentsline {paragraph}{The Stack Pointer (SP)}{30}{section*.47}% 
\contentsline {section}{\numberline {8.8}Subroutines}{30}{section.8.8}% 
\contentsline {subsection}{\numberline {8.8.1}Subroutine Nesting}{31}{subsection.8.8.1}% 
\contentsline {paragraph}{Process for calling a nested function: }{31}{section*.48}% 
\contentsline {subsection}{\numberline {8.8.2}Parameter Passing}{31}{subsection.8.8.2}% 
\contentsline {subsection}{\numberline {8.8.3}Stack Frame}{32}{subsection.8.8.3}% 
\contentsline {paragraph}{Definition: }{32}{section*.49}% 
\contentsline {paragraph}{FRAME POINTER FP }{32}{section*.50}% 
\contentsline {section}{\numberline {8.9}Flags and Conditionals}{32}{section.8.9}% 
\contentsline {subsection}{\numberline {8.9.1}Comparisons}{32}{subsection.8.9.1}% 
\contentsline {subsection}{\numberline {8.9.2}Flags}{32}{subsection.8.9.2}% 
\contentsline {chapter}{\numberline {9}IO Devices}{34}{chapter.9}% 
\contentsline {section}{\numberline {9.1}Program Control IO}{34}{section.9.1}% 
\contentsline {section}{\numberline {9.2}Interrupts}{34}{section.9.2}% 
\contentsline {paragraph}{INTERRUPT SERVICE ROUTINE }{34}{section*.51}% 
\contentsline {subsection}{\numberline {9.2.1}Notes on SUBROUTINE INTERRUPT IMPLEMENTATION: }{35}{subsection.9.2.1}% 
\contentsline {paragraph}{REGISTERS MUST BE RESTORED }{35}{section*.52}% 
\contentsline {subsection}{\numberline {9.2.2}Enable and Disabling Interrupts}{35}{subsection.9.2.2}% 
\contentsline {paragraph}{IO MODE }{35}{section*.53}% 
\contentsline {subsection}{\numberline {9.2.3}Process for a Single Device Interrupt Call}{35}{subsection.9.2.3}% 
\contentsline {section}{\numberline {9.3}Multiple Device Interrupts}{36}{section.9.3}% 
\contentsline {subsection}{\numberline {9.3.1}Approach One: Na\IeC {\"\i }ve Polling}{36}{subsection.9.3.1}% 
\contentsline {subsection}{\numberline {9.3.2}Vectored Inputs}{36}{subsection.9.3.2}% 
\contentsline {paragraph}{INTERRUPT VECTOR TABLE }{36}{section*.54}% 
\contentsline {subsection}{\numberline {9.3.3}Interrupt Nesting}{36}{subsection.9.3.3}% 
\contentsline {paragraph}{PROCESSOR PRIORITY }{36}{section*.55}% 
\contentsline {section}{\numberline {9.4}Processor Control Register}{36}{section.9.4}% 
\contentsline {chapter}{\numberline {10}Closing Remarks}{38}{chapter.10}% 
\contentsline {section}{\numberline {10.1}Multiplexer Synethesis}{38}{section.10.1}% 
\contentsline {paragraph}{Shannon's Expansion }{38}{section*.56}% 
\contentsline {section}{\numberline {10.2}Timing Considerations for Flip Flop Circuits}{38}{section.10.2}% 
\contentsline {paragraph}{Hold time violation }{38}{section*.57}% 
\contentsline {paragraph}{Timing parameters }{38}{section*.58}% 
\contentsline {paragraph}{To get clock's $T_{min}$}{39}{section*.59}% 
\contentsline {subsection}{\numberline {10.2.1}Clock Skew}{39}{subsection.10.2.1}% 
\contentsline {paragraph}{$t_{skew}$}{39}{section*.60}% 
\contentsline {subsection}{\numberline {10.2.2}Process for Timing Analysis}{39}{subsection.10.2.2}% 
